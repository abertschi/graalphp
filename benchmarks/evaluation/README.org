## -*- coding: utf-8;mode: org; fill-column: 80; -*- ## This file is best viewed with GNU Emacs Org-mode: http://orgmode.org/. 
#+SEQ_TODO: TODO USE OPTIONAL | IMPLEMENTED CANCELLED DEFERRED

This file lists the implemented feature set to run our benchmarks. In order to
see all metadata browse in Emacs or as plain text.

* IMPLEMENTED Feature set for fannkuchredux.php-1.php
:properties:
:file: [[file:fannkuchredux.php-1.php][file:fannkuchredux.php-1.php]]
:url: https://benchmarksgame-team.pages.debian.net/benchmarksgame/program/fannkuchredux-php-1.html
:end:
- [X] Function invocations
  - [X] pass number to function
  - [X] return array from function
- [X] integer variables
- [-] arrays
  - [X] integer arrays
  - [X] array();
  - [X] array(val1, val2)
  - [X] array access by index $arr[ind]
  - [X] array write by index $arr[ind] = val
  - [ ] +access argv+
- [X] for loop
- [X] do while loop
- [X] break
- [ ] +strings in printf+
- [ ] +list builtin+
- [X] Arithmetic/ logical operations
  - [X] -- operator
  - [X] ++ operator
  - [X] < operator
  - [X] != operator
  - [X] * operator
  - [X] + operator

*** Modifications
- Define command line arguments within script already (argv)
- Assign variables explicitly, do not use list builtin (syntactic sugar)
- Simplified version of printf; print values without additional text
 
* IMPLEMENTED Feature set for binarytrees.php-3.php
:properties:
:file: [[file:binarytrees.php-1.php][file:binarytrees.php-3.php]]
:url: https://benchmarksgame-team.pages.debian.net/benchmarksgame/program/binarytrees-php-3.html
:end:

- [X] function definition
  - [X] integer argument
  - [X] return an array
- [X] arrays
  - [X] arrays of arrays
  - [X] read array
  - [X] write array
- [X] (cond ? val1: val2) syntax
- [ ] +access argc+
- [X] max builtin
- [ ] +strings+
  - [ ] +printf(string, args)+
- [X] unset $var
- [X] for while
- [X] do while
- [-] Arithmetic/ logical operations
  - [X] ! operator
  - [X] -- operator
  - [ ] +=== operator -> we can use == instead+
  - [X] >>= operator
  - [X] += operator
- [X] addition of numbers

*** Modifications
- Define command line arguments within script already (argv)
- Simplified version of printf; print values without additional text
- === operator (identity) replaced with == (equality)
- We run this benchmark twice. Once with explicit copy-by-ref semantics for
  arrays (the & Operator), and one version which embodies copy-by-value
  which is the default for PHP. By-reference results show what a more
  sophisticated array implementation which may implement copy-on-write or
  similar techniques can achieve.

*** Notes
- binarytrees.php-1.php is the same benchmark but uses classes instead of arrays
- https://benchmarksgame-team.pages.debian.net/benchmarksgame/program/binarytrees-php-1.html

* IMPLEMENTED Feature set for spectralnorm.php-2.php
:properties:
:file: [[file:spectralnorm.php-2.php][file:spectralnorm.php-2.php]]
:file-original: [[file:spectralnorm.php-2.php][file:spectralnorm.php-2.orig.php]]
:url: https://benchmarksgame-team.pages.debian.net/benchmarksgame/program/spectralnorm-php-2.html
:end:

- [ ] +global variables+
- [-] functions
  - [X] invocation
  - [-] pass by reference
    - [X] arrays
    - [ ] +integer+
    - [X] does not assign value, only read
- [X] arrays
  - [X] $A[ind] = val
  - [X] array_fill
- [X] arithmetic/ logical ops
  - [X] >>
  - [X] +
  - [X] /
  - [X] ++
- [X] for loop
- [ ] +for each ($v as $key => $val)+
- [ ] +for each ($v as $val)+
  - $v is array
- [ ] +argc+
- [ ] +argv[] integer only+
- [-] builtins
  - [ ] +intval+
  - [X] array_fill(int, int, double)
  - [X] sqrt
- [ ] +printf with string val+

*** Modifications:
- Pass global variable by reference instead of declaring it as global
- Pass integer variables by value instead of by reference (default behavior)
- replace for-each keyword by for keyword (syntactic sugar)
- Define command line arguments within script already (argv)
- Simplified version of printf; print values without additional text


